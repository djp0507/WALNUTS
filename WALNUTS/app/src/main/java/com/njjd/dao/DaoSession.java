package com.njjd.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.njjd.domain.IndexNavEntity;
import com.njjd.domain.QuestionEntity;
import com.njjd.domain.TagEntity;
import com.njjd.domain.BannerEntity;

import com.njjd.dao.IndexNavEntityDao;
import com.njjd.dao.QuestionEntityDao;
import com.njjd.dao.TagEntityDao;
import com.njjd.dao.BannerEntityDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig indexNavEntityDaoConfig;
    private final DaoConfig questionEntityDaoConfig;
    private final DaoConfig tagEntityDaoConfig;
    private final DaoConfig bannerEntityDaoConfig;

    private final IndexNavEntityDao indexNavEntityDao;
    private final QuestionEntityDao questionEntityDao;
    private final TagEntityDao tagEntityDao;
    private final BannerEntityDao bannerEntityDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        indexNavEntityDaoConfig = daoConfigMap.get(IndexNavEntityDao.class).clone();
        indexNavEntityDaoConfig.initIdentityScope(type);

        questionEntityDaoConfig = daoConfigMap.get(QuestionEntityDao.class).clone();
        questionEntityDaoConfig.initIdentityScope(type);

        tagEntityDaoConfig = daoConfigMap.get(TagEntityDao.class).clone();
        tagEntityDaoConfig.initIdentityScope(type);

        bannerEntityDaoConfig = daoConfigMap.get(BannerEntityDao.class).clone();
        bannerEntityDaoConfig.initIdentityScope(type);

        indexNavEntityDao = new IndexNavEntityDao(indexNavEntityDaoConfig, this);
        questionEntityDao = new QuestionEntityDao(questionEntityDaoConfig, this);
        tagEntityDao = new TagEntityDao(tagEntityDaoConfig, this);
        bannerEntityDao = new BannerEntityDao(bannerEntityDaoConfig, this);

        registerDao(IndexNavEntity.class, indexNavEntityDao);
        registerDao(QuestionEntity.class, questionEntityDao);
        registerDao(TagEntity.class, tagEntityDao);
        registerDao(BannerEntity.class, bannerEntityDao);
    }
    
    public void clear() {
        indexNavEntityDaoConfig.clearIdentityScope();
        questionEntityDaoConfig.clearIdentityScope();
        tagEntityDaoConfig.clearIdentityScope();
        bannerEntityDaoConfig.clearIdentityScope();
    }

    public IndexNavEntityDao getIndexNavEntityDao() {
        return indexNavEntityDao;
    }

    public QuestionEntityDao getQuestionEntityDao() {
        return questionEntityDao;
    }

    public TagEntityDao getTagEntityDao() {
        return tagEntityDao;
    }

    public BannerEntityDao getBannerEntityDao() {
        return bannerEntityDao;
    }

}
